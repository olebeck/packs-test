{"format_version":"1.10.0","minecraft:client_entity":{"description":{"identifier":"hiveparty:studio_light","materials":{"default":"entity_alphatest","beam":"hiveparty_studio_light"},"textures":{"default":"textures/entity/hive/party/studio_light/light","beam":"textures/entity/hive/party/studio_light/beam"},"geometry":{"default":"geometry.hive.party.studio.light","beam":"geometry.hive.party.studio.light.beam"},"animations":{"spawn":"animation.hive.party.studio.light.spawn","pose":"animation.hive.party.studio.light.pose"},"scripts":{"initialize":["variable.light_color \u003d 0;","variable.light_r \u003d 0.0;","variable.light_g \u003d 0.0;","variable.light_b \u003d 0.0;","variable.light_r_current \u003d 0.0;","variable.light_g_current \u003d 0.0;","variable.light_b_current \u003d 0.0;","variable.pan_tilt \u003d 0;","variable.pan \u003d 0;","variable.tilt \u003d 0;","variable.pan_current \u003d 0;","variable.tilt_current \u003d 0;","variable.beam_current \u003d 0.0;","variable.first_run \u003d true;"],"pre_animation":["((variable.light_color !\u003d query.skin_id) ? (variable.light_color \u003d query.skin_id; variable.light_b \u003d math.floor(variable.light_color / 256.0 / 256.0); variable.light_g \u003d math.floor((variable.light_color - variable.light_b * 256.0 * 256.0) / 256.0); variable.light_r \u003d math.floor(variable.light_color - (variable.light_b * 256.0 * 256.0) - (variable.light_g * 256.0)); variable.light_r \u003d variable.light_r / 256.0; variable.light_g \u003d variable.light_g / 256.0; variable.light_b \u003d variable.light_b / 256.0; return 0;) : 0);","variable.light_r_current \u003d math.lerp(variable.light_r_current, variable.light_r, 0.04); variable.light_g_current \u003d math.lerp(variable.light_g_current, variable.light_g, 0.04); variable.light_b_current \u003d math.lerp(variable.light_b_current, variable.light_b, 0.04);","((variable.pan_tilt !\u003d query.variant) ? (variable.pan_tilt \u003d query.variant; variable.tilt \u003d math.floor(variable.pan_tilt / 360.0) - 180.0; variable.pan \u003d math.floor(variable.pan_tilt - (variable.tilt * 360.0)) - 180.0; return 0;) : 0;);","variable.first_run ? (variable.first_run \u003d false; variable.pan_current \u003d variable.pan; variable.tilt_current \u003d variable.tilt;) : (variable.pan_current \u003d math.lerprotate(variable.pan_current, variable.pan, 0.1); variable.tilt_current \u003d math.lerprotate(variable.tilt_current, variable.tilt, 0.1););","variable.beam_current \u003d math.lerp(variable.beam_current, (query.mark_variant / 32.0), 0.1);"],"animate":["spawn","pose"]},"render_controllers":["controller.render.default","controller.render.hive.party.studio.light.beam"]}}}
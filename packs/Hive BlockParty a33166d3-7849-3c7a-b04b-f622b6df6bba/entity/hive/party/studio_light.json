{
  "format_version": "1.10.0",
  "minecraft:client_entity": {
    "description": {
      "animations": {
        "pose": "animation.hive.party.studio.light.pose",
        "spawn": "animation.hive.party.studio.light.spawn"
      },
      "geometry": {
        "beam": "geometry.hive.party.studio.light.beam",
        "default": "geometry.hive.party.studio.light"
      },
      "identifier": "hiveparty:studio_light",
      "materials": {
        "beam": "hiveparty_studio_light",
        "default": "entity_alphatest"
      },
      "render_controllers": [
        "controller.render.default",
        "controller.render.hive.party.studio.light.beam"
      ],
      "scripts": {
        "animate": [
          "spawn",
          "pose"
        ],
        "initialize": [
          "variable.light_color = 0;",
          "variable.light_r = 0.0;",
          "variable.light_g = 0.0;",
          "variable.light_b = 0.0;",
          "variable.light_r_current = 0.0;",
          "variable.light_g_current = 0.0;",
          "variable.light_b_current = 0.0;",
          "variable.pan_tilt = 0;",
          "variable.pan = 0;",
          "variable.tilt = 0;",
          "variable.pan_current = 0;",
          "variable.tilt_current = 0;",
          "variable.beam_current = 0.0;",
          "variable.first_run = true;"
        ],
        "pre_animation": [
          "((variable.light_color != query.skin_id) ? (variable.light_color = query.skin_id; variable.light_b = math.floor(variable.light_color / 256.0 / 256.0); variable.light_g = math.floor((variable.light_color - variable.light_b * 256.0 * 256.0) / 256.0); variable.light_r = math.floor(variable.light_color - (variable.light_b * 256.0 * 256.0) - (variable.light_g * 256.0)); variable.light_r = variable.light_r / 256.0; variable.light_g = variable.light_g / 256.0; variable.light_b = variable.light_b / 256.0; return 0;) : 0);",
          "variable.light_r_current = math.lerp(variable.light_r_current, variable.light_r, 0.04); variable.light_g_current = math.lerp(variable.light_g_current, variable.light_g, 0.04); variable.light_b_current = math.lerp(variable.light_b_current, variable.light_b, 0.04);",
          "((variable.pan_tilt != query.variant) ? (variable.pan_tilt = query.variant; variable.tilt = math.floor(variable.pan_tilt / 360.0) - 180.0; variable.pan = math.floor(variable.pan_tilt - (variable.tilt * 360.0)) - 180.0; return 0;) : 0;);",
          "variable.first_run ? (variable.first_run = false; variable.pan_current = variable.pan; variable.tilt_current = variable.tilt;) : (variable.pan_current = math.lerprotate(variable.pan_current, variable.pan, 0.1); variable.tilt_current = math.lerprotate(variable.tilt_current, variable.tilt, 0.1););",
          "variable.beam_current = math.lerp(variable.beam_current, (query.mark_variant / 32.0), 0.1);"
        ]
      },
      "textures": {
        "beam": "textures/entity/hive/party/studio_light/beam",
        "default": "textures/entity/hive/party/studio_light/light"
      }
    }
  }
}
